- name: Check if Kubernetes is already initialized
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat
- name: Initialize Kubernetes cluster
  ansible.builtin.command:
    argv:
      - kubeadm
      - init
      - --pod-network-cidr=10.244.0.0/16
      - --apiserver-advertise-address={{ ansible_default_ipv4.address }}
  when: not kubernetes_init_stat.stat.exists
  register: kubernetes_init
  changed_when: true
- name: Create .kube directory for root
  ansible.builtin.file:
    path: /root/.kube
    state: directory
    mode: '0755'
- name: Copy admin.conf to root's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true
    owner: root
    group: root
    mode: '0644'
- name: Create .kube directory for ubuntu user
  ansible.builtin.file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
- name: Copy admin.conf to ubuntu's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: true
    owner: ubuntu
    group: ubuntu
    mode: '0644'
- name: Install Flannel CNI namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kube-flannel
  when: not kubernetes_init_stat.stat.exists
- name: Apply Flannel configuration
  ansible.builtin.command:
    argv:
      - kubectl
      - apply
      - -f
      - https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: not kubernetes_init_stat.stat.exists
  changed_when: true
- name: Generate join command
  ansible.builtin.command:
    argv:
      - kubeadm
      - token
      - create
      - --print-join-command
  register: kubernetes_join_command_raw
  when: not kubernetes_init_stat.stat.exists
  changed_when: true
- name: Set join command fact
  ansible.builtin.set_fact:
    kubernetes_join_command: "{{ kubernetes_join_command_raw.stdout }}"
  when: not kubernetes_init_stat.stat.exists
- name: Save join command to file
  ansible.builtin.copy:
    content: "{{ kubernetes_join_command }}"
    owner: 'root'
    group: 'root'
    mode: '0600'
    dest: /tmp/kubernetes-join-command
  when: not kubernetes_init_stat.stat.exists
  delegate_to: localhost
- name: Wait for all nodes to be ready
  ansible.builtin.command:
    argv:
      - kubectl
      - get
      - nodes
      - --no-headers
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  register: kubernetes_node_count
  until: kubernetes_node_count.stdout_lines | length >= groups['k8s_cluster'] | length
  retries: 30
  delay: 10
  changed_when: false
